{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "_uri",
						"type": "string"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "NoEvent",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "event_",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startDate",
						"type": "uint256"
					}
				],
				"name": "CreateEvent",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "user",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "startDate",
						"type": "uint256"
					}
				],
				"name": "createEvent",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "event_",
						"type": "address"
					}
				],
				"name": "eventURI",
				"outputs": [
					{
						"internalType": "string",
						"name": "uri_",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "cursor",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "getEvents",
				"outputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "event_",
								"type": "address"
							},
							{
								"internalType": "address",
								"name": "owner",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "startDate",
								"type": "uint256"
							}
						],
						"internalType": "struct NFTicketsFactory.Event[]",
						"name": "events",
						"type": "tuple[]"
					},
					{
						"internalType": "uint256",
						"name": "newCursor",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "string",
						"name": "uri_",
						"type": "string"
					}
				],
				"name": "setURI",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unpause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "uri",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/src/NFTicketsFactory.sol": "NFTicketsFactory"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/lib/openzeppelin-contracts.git/contracts/proxy/Clones.sol": {
			"keccak256": "0xc02061f2a10a957cc6681e58216e71bcc624d00dd6edab8fbcc5dcd6b24a2825",
			"license": "MIT",
			"urls": [
				"bzz-raw://01a6702302ac31e4e5dccccb860bbe83e8dc852eec8cb9f53c7e9187d2500a60",
				"dweb:/ipfs/QmVgBvkGn1CxHPC4SJfauM82aUSvUKRFqDtrXiz29HL9u3"
			]
		},
		"contracts/lib/openzeppelin-contracts.git/contracts/proxy/utils/Initializable.sol": {
			"keccak256": "0x254f9238c717ea74a1af05d4e24de286d55db8df859c60b66fac388eb53bc46e",
			"license": "MIT",
			"urls": [
				"bzz-raw://25014cbbd40641e2c82bdfd7d5955a8ee135266fc39256b747dd0b6dc3dbc546",
				"dweb:/ipfs/QmXyohPQgyZR4y6YZ2yrfEo5tv5PVSiSmkdVrwCnZTc7KN"
			]
		},
		"contracts/lib/openzeppelin-contracts.git/contracts/security/Pausable.sol": {
			"keccak256": "0x0b7aadc930e970256fbc353a8f5081e217ac0b1443e3d317cf4cb4cdf2445e3e",
			"license": "MIT",
			"urls": [
				"bzz-raw://72d90b3fc3a34b2db50c05839f6088f638ddf16aceb379c48e8aa724840fd5f6",
				"dweb:/ipfs/QmUoEoGEDs4sq7pbSS1G4asybFW1B4jJ4YjExM39a34BhX"
			]
		},
		"contracts/lib/openzeppelin-contracts.git/contracts/utils/Address.sol": {
			"keccak256": "0x9d0843efe7418f685e662378051ca0572b56e8ed4e87b97197fb535839d0e2f8",
			"license": "MIT",
			"urls": [
				"bzz-raw://fd0692e4d4981ff36bf331a6dda3f60abe2debce9233df65e807639dc7cda713",
				"dweb:/ipfs/QmeKRcBH8LegzqrtdTtEhZLyYeb7PFkAtChNbLA3fTkbKW"
			]
		},
		"contracts/lib/openzeppelin-contracts.git/contracts/utils/Context.sol": {
			"keccak256": "0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94",
			"license": "MIT",
			"urls": [
				"bzz-raw://9755b505799e622d964a843a8ed1fd60fedffca230178e5cb95ae9280df4dcd2",
				"dweb:/ipfs/QmRkhUYUUgRZ2QYJjmtQct2ubyYwS3bdUMhbuFYM12VfYn"
			]
		},
		"contracts/lib/solady.git/src/utils/LibString.sol": {
			"keccak256": "0x52ad1ebb093ff4510b9b09da39f08a9a209ce6a398d87c54279b221c06f9767b",
			"license": "MIT",
			"urls": [
				"bzz-raw://4e9ced28816254b40f8e8f1a604def9607ca1b1d402cdcc66004862bd31c5c8d",
				"dweb:/ipfs/QmX8coaBALnWqsxDtuAbRLwThqDYr93C8ddSxb8trXPMMr"
			]
		},
		"contracts/lib/solmate.git/src/auth/Owned.sol": {
			"keccak256": "0x32f4ee8fa19c888b9983285c717ea6a846ad83047a60fbd77f68a3f2693ddb21",
			"license": "AGPL-3.0-only",
			"urls": [
				"bzz-raw://e8cba7bb2858b70564f9d6412933ad83e029c06c11928414ae1b5fcaeb5005d3",
				"dweb:/ipfs/Qmea5UbNPk8arMYS7NSRn5rjXLV5RWUMyQHLG8q6jufaNS"
			]
		},
		"contracts/lib/solmate.git/src/tokens/ERC1155.sol": {
			"keccak256": "0x1879bb8610ccabbe85e4dca1608d26b6d63cfdedf84b4f03a986fd8947b65eb4",
			"license": "AGPL-3.0-only",
			"urls": [
				"bzz-raw://88a44fef6342fa1a9ab12550a59771f074076abfd96f55c404b64d8dfa82ed6c",
				"dweb:/ipfs/QmcCqakjWfsSzAJFLanfUwChHrLNvaqX1XeAdGZD97XdKb"
			]
		},
		"contracts/lib/solmate.git/src/utils/MerkleProofLib.sol": {
			"keccak256": "0x9b947537522a9894fc95aa6f6e1dec32da6689152599d2104484cbd69637bfaf",
			"license": "MIT",
			"urls": [
				"bzz-raw://f4e557a7123977584e8fa979ac1ebdbd89751b18cc6f4b7859049493ab1bcc99",
				"dweb:/ipfs/QmZriuh4hAbjoDnzxDKR61ugYZGmve258YBxwvKb9rz2Jq"
			]
		},
		"contracts/src/NFTickets.sol": {
			"keccak256": "0x18065559e33266635a3a1a99ea6ec2523ec593e4959e9c4436e2942c3ecf68c1",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://50fbdbf97c7cb5f286a9d33f7f74bd12fad0f6dc67add6aac41d6bef568a655d",
				"dweb:/ipfs/Qmf33QZzaUkaLfK9vzVQkkUvu1zQVzab6oDp4XA5kfk6a7"
			]
		},
		"contracts/src/NFTicketsFactory.sol": {
			"keccak256": "0xb3fa4f5eef90cf97e52b260c9e4d9d8be9aa671a3e2dd64aa12bfdb08e9692f3",
			"license": "UNLICENSED",
			"urls": [
				"bzz-raw://7cc3ee9a27b21f85a734a9d8c1336fdfcc92130e6e8eccd28a8767c131d21fa5",
				"dweb:/ipfs/QmNV7VnQzQx9Gn5bhR2ReMxBfAPzkSnLb3xFoHmuBSpNUj"
			]
		}
	},
	"version": 1
}